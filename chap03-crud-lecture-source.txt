mvc 패턴 model 데이터 view 화면 controller 는 커맨드센터 메뉴를 등록하려는데 메뉴등록 등등 등록하겠습니다 누른뒤에 사용자가 값을 요청한 것에 대한 값을 받고 데이터베이스에서 인설트
를 해줘

사용자들이 화면을 보는데 등록버튼이 있어요 사용자가 보는 화면을 view 라고 하고요 . 화면엔 메뉴이름 메뉴가격 메뉴판매상태 카테고리 그리고 그것들의 값이 있어요 (붕어빵 1000 y 2 ) 4가지
값을 누른뒤에 등록을 눌러요 그럼 어플리케이션에서 최초에는 컨트롤러라는 녀석이 사용자의 요청을 잡을거에요 컨트롤러는 사용자가 입력한 값을 최초로 받아서 필요에 따라서 
메뉴가격에 음수같은 이상한 값에 대한 검증을 해요. 컨트롤러는 사용자의 요청을 받고 값을 검증하고 추가적으로 해야할 것들에 대해 관리해줘요., 추가적으로 할거 등록일자같은것
검증밑 간단한 추가의 작업을 한 뒤에 db에 넣는 과정이 model 이에요 

모델은 더 세부적으로 dao dto service 가 나오게 되요. 서비스는 최초의 트랜잭션이 되요 . 세션을 서비스객체에서 생성을 해서 컨트롤러에서 넘어온 값을 완벽하게 추가하고 검증을 해줘요.
사용자에게 입력받은 값을 컨트롤러과 검증밑 추가하고 서비스객체에 넘기고 트랜잭션 데이터베이스에 넘길 준비를 하고 dao 데이터베이스와 연관있는 클래스값을 넘겨줘요. dao 는 데이터베이
스와 소통하는 녀석이에요 dao 는 전달받은 안정적인 값을 데이터베이스에 인썰트합니다. db는 행이 추가되면 반응을 하고 dao 는 호출하고 반환 서비스 반환 컨트롤러반환.

컨트롤러는 인설트가 정확히 되었다고하면 등록이 완료되었다는 등록페이지를 보여줍니다. 로그인이 완료하면 메인페이지로 간다거나 로그인 실패면 다시 원래 화면이라던지 컨트롤러의 역할
회사에 들어가요 신입사원이에요 앞에 인포에 사람이 앉아있는데 인포가 컨트롤러라고 해요. 신입사원은 7층하이미디어 아카데미아냐고 물어봐요. 말한게 전달인자라고 생각해요 그럼 인포메이
션직원은 전화를 해요 신입사원이고 7층에 오고싶데요 실질적으로 일하는 사람이 신입사원이 맞는지 확인을 해서 가공을해요. 실질적으로 서비스 전달받은 값 을 실제로 있다고 하면 그 사람 맞
냐하면 올라오라해요 . 서비스계층에서는 실질적인 db계층으로 데이터베이스에 등록되어있는게 맞으면 컨트롤로에 1을 전달해요 . 

역할에 따라서 클래스를 구분하겠다는 것입니다.

비즈니스 로직이란 포장 선별 배송 우리집으로 오잖아요 이렇게 하나의 흐름을 비즈니스 로직이라고 해요


















view -호출-> 컨트롤러 -호출-> 서비스계층 -호출-> dao -호출->db쿼리문
view <- 컨트롤러 <- 






















화면에서 메뉴이름 가격 판매상태 이 세가지 묶음을 전송버튼을 눌러서 세가지 값을 보냈다라고 하면 값은 스트링 인트 불리언 각각 안넘어가고 스트링타입으로 다 넘어와요. 컨트롤러에서 값을
전달받는 시점에서는 스트링 건트롤러는 값을 파싱해요 그래서 컨트롤러쪽에선 간단한 데이터 수정 및 자료형 맞춤이 될거고요 모델쪽은 확실하게 데이터 위주로 뭉친애들 데이터베이스와 직접
적으로 연관 데이터 연결 바꿈 수정 이런 것들을 하게 될거고요 뷰는 말그대로 컨트롤러에서는 최초의 값을 전달받아서 데이터를 취급하는 녀석들 모델쪽으로 가고 값에 대해서 마지막으로
 어떤 사용자화면을 보여줄지 컨트롤러가 결정하는 역할


어플리케이션 <---> view <---> controller <---> service <---> dao <---> db

어플리케이션을 런하는 순간 view 라는 페이지가 뜨게되요 메뉴판을 나오게 했어요 view 에서 1번을 누르면 1번요청을 하게 컨트롤러가 해요. 컨트롤러는 서비스에다가 넘겨줘요. 그리고 마지막
 관문인 dao 라는 녀석에게 넘겨주어요 dao 는 데이터베이스와 직접 소통창구 , 서비스에서 세션오픈하고 열린 세션을 dao 에게 전달을 하면서 dao 에게 해당 메소드명과 매퍼를 xml 에 파일에 
있는 것을 수행한다음에 돌아와요 . 메소드는 다시 돌아오게 되어 있어요. 돌아올땐 값을 가지고 돌아갈 꺼에요 dao 도 마찬가지로 값을 가지고 돌아가요. 

dto는 데이터 전달을 묶어서 값을 담아서 다른 클래스에게 보내주어요 계층간의 전송을 위해서 데이터를 중간중간 보내주게되요 